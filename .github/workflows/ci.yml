name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    runs-on: ${{ matrix.os }}
    name: Build & test on ${{ matrix.os }} / ${{ matrix.target }}

    steps:
      - uses: actions/checkout@v3

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      # QEMU for ARM
      - name: Set up QEMU (ARM)
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        uses: docker/setup-qemu-action@v3

      # cross gives us the proper linker inside a Docker image
      - name: Install cross
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: cargo install cross --force

      - name: Add Rust target
        run: rustup target add ${{ matrix.target }}

  
      - name: Configure .cargo for AArch64
        if: matrix.target == 'aarch64-unknown-linux-gnu'
        run: |
          mkdir -p .cargo
          cat <<EOF > .cargo/config.toml
          [target.aarch64-unknown-linux-gnu]
          runner = "qemu-aarch64 -cpu cortex-a53 -L /usr/aarch64-linux-gnu"
          rustflags = ["-Ctarget-cpu=cortex-a53"]
          EOF


      - name: Build
        run: |
          if [[ "${{ matrix.target }}" == "aarch64-unknown-linux-gnu" ]]; then
            cross build --target ${{ matrix.target }} --release
          else
            cargo build --target ${{ matrix.target }} --release
          fi

 
      - name: Test
        run: |
          if [[ "${{ matrix.target }}" == "aarch64-unknown-linux-gnu" ]]; then
            cross test --target ${{ matrix.target }} -- --nocapture
          else
            cargo test --target ${{ matrix.target }} -- --nocapture
          fi
